package br.com.pagga.chamado.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.persistence.EntityManager;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import br.com.caelum.vraptor.Consumes;
import br.com.caelum.vraptor.Controller;
import br.com.caelum.vraptor.Delete;
import br.com.caelum.vraptor.Get;
import br.com.caelum.vraptor.Path;
import br.com.caelum.vraptor.Post;
import br.com.caelum.vraptor.Put;
import br.com.caelum.vraptor.Result;
import br.com.caelum.vraptor.serialization.gson.WithoutRoot;
import br.com.pagga.chamado.model.Perfil;
import br.com.pagga.chamado.service.PerfilService;
import br.com.pagga.chamado.service.exception.BusinessException;

@Controller
@Path("/perfil")
public class PerfilController extends PaggaController {
	
	@Inject
	private PerfilService perfilService;
	
	private static final Logger logger = LoggerFactory.getLogger(PerfilController.class);
	
	public PerfilController() {
	}
	
	@Inject
	public PerfilController(HttpServletRequest request, HttpServletResponse response, Result result,
			EntityManager entityManager) {
		super(request, response, result, entityManager);
	}
	
	@Get
	@Path("")
	public void listaPerfil() {
		
		List<Perfil> findAll = this.perfilService.buscarPerfil();
		
		List<JSONObject> jsonObjList = new ArrayList<>();
		
		if(findAll == null || findAll.isEmpty()) {
			createJSON().message("Lista de perfil não encontrada").notFound();
		}else{
		
			for (Perfil perfil : findAll) {
				
				JSONObject jsonObject = createJSON()
						.put("id", perfil.getId())
						.put("descricao", perfil.getDescricao())
						.build();
				
				jsonObjList.add(jsonObject);
			}
			
			createJSON().put("perfis", jsonObjList)
			.ok();
		}
	}
	
	@Post
	@Put
	@Path("")
	@Consumes( value = "application/json", options=WithoutRoot.class )
	public void salvarPerfil(Perfil perfil) {
		
		String msg;
		
		try {
			
			if(perfil != null && perfil.getId() != null)
				msg = "Perfil atualizado com sucesso";
			else
				msg = "Perfil Salvo com sucesso";
			
			perfilService.cadastrarPerfil(perfil);
			
			createJSON().put("msg", msg).ok();
			
			System.out.println( perfil );
		} catch (BusinessException e) {
			logger.error(e.getMessage());
			createJSON().failure(e.getMessage()).serverError();
		}	
		catch (Exception e) {
			logger.error(e.getMessage());
			createJSON().message("houve erro ao salvar ").ok();
		}
		
	}
	
	@Delete
	@Path("")
	@Consumes( value = "application/json", options=WithoutRoot.class )
	public void removerPerfil(Perfil perfil) {
		
		try {
			perfilService.removePerfil(perfil);
			
			createJSON().put("msg", "Perfil removido com sucesso").ok();
		} catch (BusinessException e) {
			logger.error(e.getMessage());
			createJSON().failure(e.getMessage()).serverError();
		} catch (Exception e) {
			logger.error(e.getMessage());
			createJSON().message("Erro ao remover perfil! ").ok();
		}
		
	}
	
}
